Hi, just went through the code and have a few notes:
1. When the game is  on, we broadcast the game state every single frame. Isn't it better if we only broadcast when something new happens? (i.e. player starts moving, bomb is placed, etc.)
	We could try to just have one ws package per frame with changes.
2. The validateAndUpdatePlayerPosition validates on speed of the movement. I think this is redundant and instead we should include collision checks for the level walls on the server side.
3. Actually, either handlePlayerMove or validateAndUpdatePlayerPosition is redundant. They should just be one function.
	Actually Actually, validateAndUpdatePlyaerPosition is completely useless because it depends on a player attribute "pendingMoves" that is never defined anywhere
4. Need to add a 4 player limit to the server. If someone else joins they should just be shown a room full screen.
5. Player disconnect does not work for me for some reason
6. We should clearInterval of countDownInterval when another player joins.
7. Why have both grid and block as seperate gamestate objects. grid can already control if a block is there or not, and powerups are stored in another variable.
	Heck, just store powerUps as an attribute too the grid, and if it is null then we know there wasn't one in there.
8. startgame has like 3 back to back broadcasts for each function. 
9. we do NOT need to send the gamestate to a newly joined player.
10. ...serializablegamestate?
11. game cound start from both handlelevelvote and handleplayerready

Lobby:
1. ..do we need to bind methods that already belong to this class?
2. ... we arent really using the miniframework (ex. no createElement in the render function). Heck, render doesn't even have a return function

Chat:
1. Chat.js is not used??? 